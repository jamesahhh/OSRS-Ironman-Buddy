<?xml version="1.0" encoding="utf-8"?>
<resources>
    <string name="app_description_text">
        This Application is meant to be a utility application for use with my Ironman Mode character
        in the MMORPG Old School Runescape.

        \n\n   By Selecting the helmet button you will be taken to the tracking fragments based on my daily collection runs for
        certain items. These refresh daily at a certain time and I make the runs every morning.

        \n\n   By Selecting the running man button you will be taken to a simple tracker for collectible items with the agility skill.
        You can increment the count in the two different modes, Marks of Grace and Pyramid Tops,
        as well as switch between the two modes by shaking your cell phone.
        This functionality will only work if your phone has an accelerometer; which most modern smartphone devices include.

        \n\n   By selecting the wiki icon button you will be taken to an appropriate web browser that will load the Old School
        Runescape Wiki Homepage

        \n\nSatisfying the Guideline 2 of the Assignment:

        \n\n   I decided to incorporate an outside library that would avoid
        having to do boilerplate sensor code. The Shake functionality is implemented by this library under certain parameters;
        under which parameters I\'m not entirely sure as this was one of the first results to come up under \"Android Shake Sensor.\"

        \n\nSatisfying Guideline 3A:

        \n\n   I incorporated persistence with SharedPreferences Class that instantiates at the Application level, this allowed me to have
        an application wide Shared Preferences that I am able to access anywhere regardless of Activity or Fragment classification.
        This is most clearly demonstrated in the Agility Collectible Tracker (Running man Button) as you increment and decrement the count,
        you are permitted to leave and reload the activity and will notice the number being loaded back into the TextView container.
        This functionality persists even after the application has been closed.

        \n\nSatisfying Guideline 3C:

        \n\n   I utilized the ACTION_VIEW intent to launch the hardcoded link to the Old School Runescape Wiki. This is kind of a cop out
        as I would have preferred to utilize the JSOUP library to webscrape some information from the Wiki and display it.... but I unfortunately
        could not figure that out. So there is that...

        \n\nSatisfying Guideline 4:

        \n\n I implemented some Integer Checks on the Agility Collectible Tracker that will display a toast to the User if they attempt to
        decrement past 0. This is shows an interaction to the user by notifying them of their "silly operation"

        \n\nSatisfying Guideline 5:

        \n\n I implemented a Fragment Pager Adapter that would allow me to dynamically load a specified amount of fragments and decorate them
        with data that would change the state of each one. This is a reusable component in my continuation of this project as only the
        Collection Run Activity utilizes it at the moment. I think this fits the guideline as it takes a more complicated concept as fragments
        and builds upon the idea utilizing further libraries in the Android APK

    </string>

</resources>